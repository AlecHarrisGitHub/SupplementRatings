name: Deploy to EC2

# Trigger on pushes to main
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out your code
      - uses: actions/checkout@v3

      # Build frontend in CI
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Archive frontend build
        run: |
          tar -czf frontend_dist.tar.gz -C frontend/dist .

      # 2. Start an SSH agent and load your private key
      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 3. Add your server to known_hosts (so SSH won't prompt)
      - name: Add remote host to known_hosts (best-effort)
        continue-on-error: true
        run: |
          host="${{ secrets.REMOTE_HOST }}"
          if [ -n "$host" ]; then
            mkdir -p ~/.ssh
            ssh-keyscan -T 10 -H "$host" >> ~/.ssh/known_hosts 2>/dev/null || true
          fi

      # Copy tarball directly to EC2

      - name: Copy frontend build to EC2 (robust)
        run: |
          set -e
          host="${{ secrets.REMOTE_HOST }}"
          user="${{ secrets.REMOTE_USER }}"
          echo "Checking SSH reachability..."
          timeout 15 bash -c "cat < /dev/null > /dev/tcp/$host/22" 2>/dev/null || true
          echo "Uploading tarball with retries..."
          SSH_OPTS="-o StrictHostKeyChecking=no -o ServerAliveInterval=20 -o ServerAliveCountMax=6 -o ConnectTimeout=20 -o IPQoS=throughput"
          for attempt in 1 2 3; do
            rsync -az --compress-level=6 --partial --inplace -e "ssh $SSH_OPTS" frontend_dist.tar.gz "$user@$host:~/SupplementRatings/frontend_dist.tar.gz" && break || {
              echo "rsync attempt $attempt failed; retrying in 5s..."; sleep 5;
            }
          done

      # 4. SSH in, back-up DB, pull, rebuild, restart
      - name: Deploy to EC2
        run: |
          set -e
          host="${{ secrets.REMOTE_HOST }}"
          user="${{ secrets.REMOTE_USER }}"
          SSH_OPTS="-o StrictHostKeyChecking=no -o ServerAliveInterval=20 -o ServerAliveCountMax=6 -o ConnectTimeout=20 -o BatchMode=yes -o IPQoS=throughput"
          echo "Waiting for SSH to become reachable..."
          for i in {1..18}; do # up to ~3 minutes
            if timeout 10 bash -c "cat < /dev/null > /dev/tcp/$host/22" 2>/dev/null; then
              echo "SSH port open"; break
            fi
            echo "SSH not reachable yet (attempt $i). Retrying in 10s..."; sleep 10
          done

          echo "Running remote deploy script (with retries)..."
          for attempt in 1 2 3; do
            ssh $SSH_OPTS "$user@$host" 'bash -s' <<'REMOTE_SCRIPT'
            set -e
            cd ~/SupplementRatings

            mkdir -p frontend_dist
            if [ -f frontend_dist.tar.gz ]; then
              rm -rf frontend_dist/*
              tar -xzf frontend_dist.tar.gz -C frontend_dist
              rm -f frontend_dist.tar.gz
            fi

            # ---------- 2) pull latest code ----------
            git fetch origin
            git reset --hard origin/main

            # ---------- 4) rebuild & restart ----------
            if [ ! -f .env ]; then
              sudo cp /home/ec2-user/env_backups/.env .env
              sudo chown ec2-user:ec2-user .env
            fi

            source ~/env_backups/venv/bin/activate
            pip install -r requirements.txt

            python manage.py collectstatic --noinput
            python manage.py migrate

            sudo systemctl restart gunicorn
            sudo systemctl reload nginx
REMOTE_SCRIPT
            rc=$?
            if [ "$rc" -eq 0 ]; then
              echo "Remote deploy succeeded"; break
            else
              echo "SSH attempt $attempt failed with code $rc; retrying in 10s..."; sleep 10
            fi
          done
